#!/usr/bin/env python3
"""Debug d√©taill√© ALMAA"""

import sys
from pathlib import Path
sys.path.insert(0, str(Path(__file__).parent.parent))

from agents.chef import AgentChef
from loguru import logger
import json

def test_chef_responses():
    """Test les r√©ponses du Chef"""
    
    chef = AgentChef()
    
    tests = [
        ("Bonjour", "Salutation simple"),
        ("Cr√©e une fonction fibonacci", "T√¢che de code"),
        ("Analyse ce code: x = 1", "Analyse"),
    ]
    
    for request, desc in tests:
        logger.info(f"\nüìù Test: {desc}")
        logger.info(f"   Request: {request}")
        
        try:
            result = chef.think({"user_request": request})
            if result:
                logger.success("‚úÖ R√©ponse re√ßue:")
                logger.info(f"   D√©l√©gation: {result.get('d√©l√©gation')}")
                logger.info(f"   Type: {result.get('type_tache')}")
                logger.info(f"   Complexit√©: {result.get('complexit√©')}")
                
                # V√©rifier la d√©l√©gation
                delegation = result.get('d√©l√©gation', '')
                if delegation not in ['ChefProjet', 'moi-m√™me']:
                    logger.error(f"‚ùå D√©l√©gation invalide: '{delegation}'")
            else:
                logger.error("‚ùå Pas de r√©ponse")
                
        except Exception as e:
            logger.error(f"‚ùå Erreur: {e}")

if __name__ == "__main__":
    test_chef_responses()
